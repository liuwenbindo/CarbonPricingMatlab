% optimize_qn.m
% Wenbin Liu
% -------------
% Run optimization process with Quasi-Newton method (quasi_newton.m).

myfun = ADfun('utilitycalc',1);
dim = 63;

% Starting points:
% m: Former optimal point.
% m = [0.833862047445461,0.986771045676486,0.844791260010868,1.29452599908852,1.02337420555469,1.03977841748325,0.909265854132061,1.10715414356476,1.07129074654436,1.17879428820710,1.13498630255108,1.20495671381198,1.16330210508919,1.21134083349312,0.916642214563293,1.02588970956374,0.989552264507359,1.02911933651639,0.989687505001852,1.03469878152561,0.997319316611813,1.05050804431090,1.01424299007943,1.03965571749010,1.00313901814010,1.05301959072335,1.01704250703788,1.05809806181616,1.02357814798761,1.31483120932804,1.21111505264918,0.942347056540385,0.925019050140336,0.961782971634532,0.936607318620047,0.960033586814537,0.934807022529764,0.978733617472501,0.955852102428261,0.955911613784748,0.931118738562057,0.970787405473375,0.953775060432683,0.964705605637203,0.945202246004638,0.983836579961716,0.884296826991382,0.955166235803206,0.930175146511089,0.969332029953984,0.950727782794455,0.962403694081432,0.944746749603768,0.981491927667051,0.885571625124068,0.962295388844616,0.941208364100859,0.977588116331144,0.834170222295060,1.00049399187436,0.976793770877953,1.08893287175070,0.141227280443693];

% m2: New optimal point.
% m2 = [0.837707337037397, 0.962670980519905, 0.857812056769632, 1.16032608437118, 1.00989269507944, 1.03677010033358, 0.916194787658205, 1.17427947186098, 1.12081249514449, 1.17175557749961, 1.08356370159308, 1.18730629008919, 1.10247541463792, 1.14366519777209, 0.930023557293070, 1.03715528279697, 1.00932778127668, 1.06189648578424, 1.02278827478157, 1.07104554250665, 1.03360677302646, 1.11911500989810, 1.06623438080235, 1.07233174995470, 1.03558589840186, 1.11776197191961, 1.06573767900644, 1.12527238808855, 1.07540819620467, 1.27902519386631, 1.16089722136301, 0.925011503678447, 0.916228232471721, 0.941672473207788, 0.912313498054889, 0.945200019219748, 0.917369770069935, 0.954015959716687, 0.913697750029668, 0.944826356820969, 0.918328663121830, 0.953329719425072, 0.914748913583565, 0.962029876117074, 0.925567130553018, 0.975580261044293, 0.911582278151308, 0.944554111296555, 0.918414038042587, 0.952900062022150, 0.914811532428870, 0.961304316460740, 0.925032567419308, 0.974494631163093, 0.911150060478386, 0.961255861410721, 0.925457624550131, 0.973228300173694, 0.909020413515041, 1.00009645650893, 0.940726379085871, 1.06732796466163, 0.141073862057497];

% s: Random vector. (~Unif(0,1))
s = [0.193211038592101,0.689435100924171,0.0504550031686729,0.184434115699354,0.0456583234773829,0.885041502041251,0.839794385798114,0.118155245153682,0.410414853697837,0.120228589990650,0.572092522260723,0.949390134629152,0.256385159796880,0.989865435151316,0.349808041044371,0.208522373893430,0.665827160044803,0.973344706720870,0.622699821538518,0.0635378925573686,0.373509533241305,0.166251535436548,0.231278078105778,0.0522086332938522,0.901756316713514,0.793291699901326,0.373014324844645,0.832054705376542,0.753834556589773,0.621863097261786,0.394093180849151,0.359277961450212,0.0888524608922825,0.341677003639647,0.548670594067366,0.460547461088786,0.645452373435590,0.513520841267514,0.814426468563278,0.0971832059869966,0.463713560645511,0.589817489604743,0.187172070539839,0.611330146637952,0.0519419813683460,0.575726948453721,0.842344701828773,0.499725973621345,0.439024887659214,0.149057083245688,0.0282794508957929,0.756669787984348,0.796106235942840,0.293555594417440,0.115206746018031,0.375091630987986,0.828893745056770,0.841776581954761,0.665238451557799,0.960139975886254,0.943117892210703,0.112699492380728,0.648287449225586];

% Global variables for optimization process:
% - grads: gradient of each step.
% - utils: utility value of each step.
% - fcounts: 'fcount' parameter of each step.
% - xs: solution of each step.
global grads utils fcounts xs;

% TRM method:
% start = zeros(10, length(m));
% j = 1;
% for i = 0.5:0.05:1.95
%     start(j,:) = rand(1,length(m));%i*m;
%     j = j+1;
% end

% evaluate the objective fcn at each of these m points
% f=zeros(10,1);
% 
% for jj=1:10
%     xjj_size = size(start(jj,:));
%     input = start(jj,:);
%     f(jj)= utilitycalc(input);
% end
% 
% ind=find(f==min(f));

% %
% gamma=1; % a parameter in RBF (phi function)
% deg=-1; % in the RBF model, p(x) is set to zero.
% % set the mono decreasing lambda sequence
% Ls=[10*0.3.^(0:2),0];
% %
% % set the global minimizer guesstimate
% xstar=2*(2*rand(dim,1)-1);
% %n
% % gradient used?
% useg=1; % gradient is not used
% %
% % set the function used in the RBF approximation
% method='cubic';
% 
% [fmin1,xmin1,iter1,xbar_min1,fbar_min1,fcount]=global_RBF_TRM(myfun,x,f,ind,xstar,Ls,method,deg,gamma,useg);

% Quasi-Newton method:
tic
[fmin,xmin,fcount] = quasi_newton(myfun,s);
time_qn = toc;